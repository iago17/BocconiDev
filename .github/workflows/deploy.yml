# This is a basic workflow to help you get started with Actions

name: manual-deploy

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      deployType:
        description: 'Deploy Type'
        required: true
        default: 'validate' 
        type: choice
        options:
        - validate
        - deploy
      org:
        description: 'Target Org'
        required: true
        default: 'DEV' 
        type: choice
        options:
        - DEV
        - TECHMERGE
        - PREPROD
        - PROD
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '>=14'
          check-latest: true

      # Runs a single command using the runners shell        
      - name: Install CLI
        run: npm install sfdx-cli --global

      # The URL is stored in the Github Secret named AUTH_URL
      # so here we store the URL into a text file
      - name: SETUP DEV (${{ inputs.org }})
        if: inputs.org == 'DEV'
        run: | 
          sfdx force:auth:jwt:grant --clientid 3MVG97srI77Z1g78w4kEO7kHMVlTRcUry0rfaT8WkfRFzAVrJ07bRDlyNoHa5Up1Zf18gGTyX_YNJgNVnaXTS --username release.manager@bocconi.com.jkdev1 --jwtkeyfile keys/server.key --setdefaultdevhubusername --setalias sfdx-ci --instanceurl https://test.salesforce.com
      - name: SETUP TECHMERGE (${{ inputs.org }})
        if: inputs.org == 'TECHMERGE'
        run: | 
          sfdx force:auth:jwt:grant --clientid 3MVG9w8uXui2aB_ryu1Xo7JYO5TNPHYIK69cnt9r4moIduw6aiOfIbjMR.pi7Sh5QnWmF9xp46qLOKoCRD8Hp --username release.manager@bocconi.it.jktmerge --jwtkeyfile keys/server.key --setdefaultdevhubusername --setalias sfdx-ci --instanceurl https://test.salesforce.com
      - name: SETUP PREPROD (${{ inputs.org }})
        if: inputs.org == 'PREPROD'
        run: | 
          sfdx force:auth:jwt:grant --clientid 3MVG9w8uXui2aB_ryu1Xo7JYO5XCR96O_gORwZgOQkHJfLfGLgnzkH1gHyfuHwiO9FxLFbgCL4UHI4Qn31fwS --username release.manager@bocconi.it.jkpreprod --jwtkeyfile keys/server.key --setdefaultdevhubusername --setalias sfdx-ci --instanceurl https://test.salesforce.com
      - name: SETUP PROD (${{ inputs.org }})
        if: inputs.org == 'PROD'
        run: | 
          sfdx force:auth:jwt:grant --clientid 3MVG9vvlaB0y1YsKvnfO79m8BKG1uasHEXSdzxAZyyi7Ly1sgf1ZFDCV_ascgbirCiL5GsTd3ZPkj2Dsk8e.s --username release.manager@bocconi.it --jwtkeyfile keys/server.key --setdefaultdevhubusername --setalias sfdx-ci --instanceurl https://bocconidemo.my.salesforce.com
        #echo ${{ secrets.AUTH_URL_PROD}} > ./AUTH_URL.txt
        #sfdx auth:sfdxurl:store -f ./AUTH_URL.txt -s -a ${{ inputs.org }}
      #echo ${{ secrets.AUTH_URL_DEV}} > ./AUTH_URL.txt
        #sfdx auth:sfdxurl:store -f ./AUTH_URL.txt -s -a ${{ inputs.org }}
        # sfdx force:auth:web:login -a OrgAlias -r https://test.salesforce.com
        # sfdx force:org:display -u BocconiDev --verbose
    # running Validate or deploy based on user option (else statement not available)
      - name: Running VALIDATE (${{ inputs.deployType }} == 'validate')
        if: inputs.deployType == 'validate'
        #run: 'sfdx force:source:deploy -x ./manifest/FirstTestDeploy.xml -c -u ${{ inputs.org }} -w 10'
        run: 'sfdx force:source:deploy -u release.manager@bocconi.it.jkpreprod --checkonly --testlevel RunLocalTests -x ./manifest/FirstTestDeploy.xml'

      - name: Running DEPLOY (${{ inputs.deployType }} == 'deploy')
        if: inputs.deployType == 'deploy'
        run: 'sfdx force:source:deploy -x ./manifest/FirstTestDeploy.xml -u ${{ inputs.org }} -w 10'
        
